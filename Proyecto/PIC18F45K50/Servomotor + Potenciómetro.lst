CCS PCH C Compiler, Version 5.090, 13314               01-dic.-20 12:41

               Filename:   C:\Users\Martin Hdez\Desktop\18F45K50\Práctica 16 – Servomotor + Potenciómetro\Servomotor + Potenciómetro.lst

               ROM used:   394 bytes (1%)
                           Largest free fragment is 24178
               RAM used:   29 (1%) at main() level
                           30 (1%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 31

*
2000:  GOTO   20E2
*
2008:  MOVWF  04
200A:  MOVFF  FD8,05
200E:  MOVFF  FE0,06
2012:  MOVLB  0
2014:  MOVFF  FE9,0C
2018:  MOVFF  FEA,07
201C:  MOVFF  FE1,08
2020:  MOVFF  FE2,09
2024:  MOVFF  FD9,0A
2028:  MOVFF  FDA,0B
202C:  MOVFF  FF3,12
2030:  MOVFF  FF4,13
2034:  MOVFF  FFA,14
2038:  MOVFF  FF5,15
203C:  MOVFF  FF6,16
2040:  MOVFF  FF7,17
2044:  MOVFF  00,0E
2048:  MOVFF  01,0F
204C:  MOVFF  02,10
2050:  MOVFF  03,11
2054:  BTFSS  FF2.5
2056:  GOTO   2060
205A:  BTFSC  FF2.2
205C:  GOTO   20AE
2060:  MOVFF  0E,00
2064:  MOVFF  0F,01
2068:  MOVFF  10,02
206C:  MOVFF  11,03
2070:  MOVFF  0C,FE9
2074:  MOVFF  07,FEA
2078:  BSF    07.7
207A:  MOVFF  08,FE1
207E:  MOVFF  09,FE2
2082:  MOVFF  0A,FD9
2086:  MOVFF  0B,FDA
208A:  MOVFF  12,FF3
208E:  MOVFF  13,FF4
2092:  MOVFF  14,FFA
2096:  MOVFF  15,FF5
209A:  MOVFF  16,FF6
209E:  MOVFF  17,FF7
20A2:  MOVF   04,W
20A4:  MOVFF  06,FE0
20A8:  MOVFF  05,FD8
20AC:  RETFIE 0
.................... /*
.................... AUTOR: MICROSIDE TECHNOLOGY S.A. DE C.V.
.................... FECHA: JUNIO 2019
.................... */
.................... 
.................... 
.................... /*
.................... ---------------------------------------------------------------------------
.................... Controlar la posición de un servomotor por medio de un potenciometro
.................... utilizando los modulos PWM y ADC
.................... ---------------------------------------------------------------------------
.................... */
.................... 
.................... #include <18F45K50.h>                                  //Incluye el microcontrolador con el que se va a trabajar 
.................... //////////// Standard Header file for the PIC18F45K50 device ////////////////
.................... ///////////////////////////////////////////////////////////////////////////
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          ////
.................... //// This source code may only be used by licensed users of the CCS C  ////
.................... //// compiler.  This source code may only be distributed to other      ////
.................... //// licensed users of the CCS C compiler.  No other use, reproduction ////
.................... //// or distribution is permitted without written permission.          ////
.................... //// Derivative programs created using this software in object code    ////
.................... //// form are not restricted in any way.                               ////
.................... ///////////////////////////////////////////////////////////////////////////
.................... #device PIC18F45K50
.................... 
.................... #list
.................... 
.................... #device ADC=10                                         // Configura el ADC
.................... #use delay(internal=48MHz)                             // Tipo de oscilador y frecuencia dependiendo del microcontrolador 
*
20C2:  MOVLW  01
20C4:  SUBWF  1D,F
20C6:  BNC   20E0
20C8:  CLRF   FEA
20CA:  MOVLW  1D
20CC:  MOVWF  FE9
20CE:  MOVF   FEF,W
20D0:  BZ    20E0
20D2:  MOVLW  02
20D4:  MOVWF  00
20D6:  DECFSZ 00,F
20D8:  BRA    20D6
20DA:  BRA    20DC
20DC:  DECFSZ FEF,F
20DE:  BRA    20D2
20E0:  RETURN 0
.................... #build(reset=0x02000,interrupt=0x02008)                // Asigna los vectores de reset e interrupción para la versión con bootloader
.................... 
.................... #org 0x0000,0x1FFF {}                                  // Reserva espacio en memoria para el bootloader
.................... 
.................... int16 Duty;                                            //variable para ajustar el valor del PWM
.................... int1 SUBE;
.................... 
.................... #int_TIMER0
.................... 
.................... void TIMER0_isr()
.................... 
.................... {
.................... output_high( PIN_C2);                                 
*
20AE:  BCF    F94.2
20B0:  BSF    F8B.2
.................... SUBE=1;
20B2:  BSF    1B.0
.................... set_timer0(5780);                                    
20B4:  MOVLW  16
20B6:  MOVWF  FD7
20B8:  MOVLW  94
20BA:  MOVWF  FD6
.................... 
20BC:  BCF    FF2.2
20BE:  GOTO   2060
.................... }
.................... 
.................... void main()
*
20E2:  CLRF   FF8
20E4:  BCF    FD0.7
20E6:  BSF    07.7
20E8:  MOVLW  70
20EA:  MOVWF  FD3
20EC:  CLRF   FD2
20EE:  CLRF   F9B
20F0:  MOVLB  F
20F2:  CLRF   x5B
20F4:  CLRF   x5C
20F6:  CLRF   x5D
20F8:  CLRF   x5E
20FA:  CLRF   x5F
20FC:  CLRF   F9A
20FE:  CLRF   F99
2100:  CLRF   F98
.................... 
.................... {
.................... 
....................   set_tris_c (0xFB);                                 //salida de pulsos
2102:  MOVLW  FB
2104:  MOVWF  F94
....................   setup_timer_0 (T0_INTERNAL|T0_DIV_4);
2106:  MOVLW  81
2108:  MOVWF  FD5
....................   enable_interrupts (int_TIMER0) ;
210A:  BSF    FF2.5
....................   enable_interrupts (GLOBAL) ;
210C:  MOVLW  C0
210E:  IORWF  FF2,F
....................   setup_adc_ports (sAN0);                            //configuracion deL canal ADC en A0
2110:  MOVF   FC1,W
2112:  ANDLW  F0
2114:  MOVWF  FC1
2116:  MOVLW  01
2118:  MOVWF  x5B
211A:  MOVLW  00
211C:  MOVWF  x5F
211E:  MOVWF  x5C
2120:  MOVWF  x5D
2122:  MOVWF  x5E
....................   setup_adc (ADC_CLOCK_INTERNAL);
2124:  MOVF   FC0,W
2126:  ANDLW  C0
2128:  IORLW  07
212A:  MOVWF  FC0
212C:  BSF    FC0.7
212E:  BSF    FC2.0
....................   set_adc_channel (0);                               //conversion analogica por canal 0
2130:  MOVLW  00
2132:  MOVWF  01
2134:  MOVF   FC2,W
2136:  ANDLW  83
2138:  IORWF  01,W
213A:  MOVWF  FC2
.................... 
....................     while(1)
.................... 
....................          {
.................... 
....................                 if (SUBE == 1)
213C:  BTFSS  1B.0
213E:  BRA    2166
.................... 
....................                {
....................                     delay_us (DUTY);
2140:  MOVFF  1A,1C
2144:  INCF   1C,F
2146:  DECF   1C,F
2148:  BTFSC  FD8.2
214A:  BRA    2156
214C:  SETF   1D
214E:  MOVLB  0
2150:  RCALL  20C2
2152:  MOVLB  F
2154:  BRA    2146
2156:  MOVFF  19,1D
215A:  MOVLB  0
215C:  RCALL  20C2
....................                     output_low (PIN_C2) ;
215E:  BCF    F94.2
2160:  BCF    F8B.2
....................                      SUBE = 0;
2162:  BCF    1B.0
2164:  MOVLB  F
....................                  }
.................... 
....................                   if (SUBE == 0)
2166:  BTFSC  1B.0
2168:  BRA    2186
....................                       {
....................                           DUTY = read_adc ();              //lectura del potenciometro
216A:  BSF    FC2.1
216C:  BTFSC  FC2.1
216E:  BRA    216C
2170:  MOVFF  FC4,1A
2174:  MOVFF  FC3,19
....................                           DUTY = DUTY * 2;                 //ajuste de rango
2178:  BCF    FD8.0
217A:  RLCF   19,F
217C:  RLCF   1A,F
....................                           DUTY += 500;
217E:  MOVLW  F4
2180:  ADDWF  19,F
2182:  MOVLW  01
2184:  ADDWFC 1A,F
....................                           }
.................... 
....................                            while (SUBE == 0) ;
2186:  BTFSS  1B.0
2188:  BRA    2186
218A:  BRA    213C
.................... 
....................                 }
.................... 
.................... }
218C:  SLEEP 

Configuration Fuses:
   Word  1: C823   PLL3X PLLEN NOCPUDIV LS48MHZ INTRC_IO PRIMARY_SW FCMEN IESO
   Word  2: 3C5E   PUT BROWNOUT BORV19 NOLPBOR NOWDT WDT32768
   Word  3: D300   CCP2C1 PBADEN T3CKC0 SDOB3 MCLR
   Word  4: 00A1   STVREN NOLVP ICSP2 NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
